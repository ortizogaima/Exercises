1-Describe what Hibernate is and what it is used for.

ANSWER:
Hibernate is a framework which provides some abstraction layer, meaning that the programmer does not have to worry about the implementations, 
Hibernate does the implementations for you internally like Establishing a connection with the database, writing query to perform CRUD operations etc.

2-Write a Java program to generate a magic square of order n (all row, column, and
diagonal sums are equal).
From Wikipedia, In recreational mathematics and combinatorial design, a magic
square is a n x n square grid (where n is the number of cells on each side) filled with
distinct positive integers in the range 1, 2, ..., n2 such that each cell contains a different
integer and the sum of the integers in each row, column and diagonal is equal. The
sum is called the magic constant or magic sum of the magic square. A square grid
with n cells on each side is said to have order n.

ANSWER:
FUNCTIONAL CODE IN /Java/javaexercises/src/MagicSqare.java 

3-Given an array of integers.
Write an algorithm that brings all nonzero elements to the left of the array,
and returns the number of nonzero elements.
The algorithm should operate in place, i.e. shouldn't create a new array.
The order of the nonzero elements does not matter.
The numbers that remain in the right portion of the array can be anything.
Example:
Given the array [ 1, 0, 2, 0, 0, 3, 4 ], A possible answer is [ 4, 1, 3, 2, ?, ?, ? ],
4 non-zero elements, where "?" can be any number.
Code should have good complexity and minimize the number of writes to the array.
[ 1, 0, -2, 0, 0, 3, 4, 0, 0]
[ 4, 1, 3, -2, ?, ?, ? ] return 4

ANSWER: 
FUNCTIONAL CODE IN /Java/javaexercises/src/SortNonZero.java


- What is the complexity of your algorithm?

ANSWER:
THE COMPLEXITY IS: O(n)





